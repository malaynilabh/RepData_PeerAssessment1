datafile <- "D:/coursera/Exploratory Data Analysis/Project1/household_power_consumption.txt"
data <- read.table(datafile, header = TRUE, sep=";", stringAsFactors = FALSE, dec=".")
data <- read.table(datafile, header = TRUE, sep=";")
datafile <- "D:/coursera/Exploratory Data Analysis/Project1/household_power_consumption.txt"
data <- read.table(datafile, header = TRUE, sep=";", stringAsFactors = FALSE, dec=".")
data <- read.table(datafile, header = TRUE)
datafile
datafile <- "D:/coursera/Exploratory Data Analyis/Project1/household_power_consumption.txt"
data <- read.table(datafile, header = TRUE, sep=";", stringAsFactors = FALSE, dec=".")
data <- read.table(datafile, header = TRUE)
subsetdata<- data[data$Date %in% c("1/2/2007","2/2/2007"),]
globalActivePower <- as.numeric(subsetdata$Global_active_Power)
colnames(subsetdata)
head(data)
data <- read.table(datafile, header = TRUE, sep=";", stringAsFactors = FALSE, dec=".")
data <- read.table(datafile, header = TRUE, sep=";", dec=".")
subsetdata<- data[data$Date %in% c("1/2/2007","2/2/2007"),]
subsetdata
globalActivePower <- as.numeric(subsetdata$Global_active_Power)
head(globalActivePower)
png(png("plot1.png", width = 480, hieght = 480)
;
png("plot1.png", width = 480, hieght = 480)
hhist(globalActivePower, col = "red" , main = "Global Active Power" , xlab = "Global Active Power (kilowatts)")
hist(globalActivePower, col = "red" , main = "Global Active Power" , xlab = "Global Active Power (kilowatts)")
dataFile <- "D:/coursera/Data Analyis/Project1/household_power_consumption.txt"
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
dataFile <- "D:/coursera/Exploratory Data Analyis/Project1/household_power_consumption.txt"
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
head(subSetData)
globalActivePower <- as.numeric(subSetData$Global_active_power)
png("plot1.png", width=480, height=480)
hist(globalActivePower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.off()
png("D:/coursera/Exploratory Data Analyis/Project1/plot1.png", width=480, height=480)
hist(globalActivePower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.off()
dataFile <- "D:/coursera/Exploratory Data Analyis/Project1/household_power_consumption.txt"
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
subSetData <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
globalActivePower <- as.numeric(subSetData$Global_active_power)
png("D:/coursera/Exploratory Data Analyis/Project1/plot2.png", width=480, height=480)
plot(datetime, globalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
globalActivePower <- as.numeric(subSetData$Global_active_power)
subMetering1 <- as.numeric(subSetData$Sub_metering_1)
subMetering2 <- as.numeric(subSetData$Sub_metering_2)
subMetering3 <- as.numeric(subSetData$Sub_metering_3)
png("plot3.png", width=480, height=480)
plot(datetime, subMetering1, type="l", ylab="Energy Submetering", xlab="")
lines(datetime, subMetering2, type="l", col="red")
lines(datetime, subMetering3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
dev.off()
png("D:/coursera/Exploratory Data Analyis/Project1/plot3.png", width=480, height=480)
plot(datetime, subMetering1, type="l", ylab="Energy Submetering", xlab="")
lines(datetime, subMetering2, type="l", col="red")
lines(datetime, subMetering3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
dev.off()
q()
datetime <- strptime(paste(subSetData$Date, subSetData$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
globalActivePower <- as.numeric(subSetData$Global_active_power)
globalReactivePower <- as.numeric(subSetData$Global_reactive_power)
voltage <- as.numeric(subSetData$Voltage)
subMetering1 <- as.numeric(subSetData$Sub_metering_1)
subMetering2 <- as.numeric(subSetData$Sub_metering_2)
subMetering3 <- as.numeric(subSetData$Sub_metering_3)
png("D:/coursera/Exploratory Data Analyis/Project1/plot4.png", width=480, height=480)
par(mfrow = c(2, 2))
plot(datetime, globalActivePower, type="l", xlab="", ylab="Global Active Power", cex=0.2)
plot(datetime, voltage, type="l", xlab="datetime", ylab="Voltage")
plot(datetime, subMetering1, type="l", ylab="Energy Submetering", xlab="")
lines(datetime, subMetering2, type="l", col="red")
lines(datetime, subMetering3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, lwd=2.5, col=c("black", "red", "blue"), bty="o")
plot(datetime, globalReactivePower, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
q()
myDestDir <- "c:/temp"
myPackages <-
c("Cairo", "crp.CSFP", "dbConnect", "fArma", "HH", "Rcmdr", "RcmdrPlugin.BCA",
"RcmdrPlugin.coin", "RcmdrPlugin.depthTools", "RcmdrPlugin.doBy",
"RcmdrPlugin.DoE", "RcmdrPlugin.doex", "RcmdrPlugin.EHESsampling",
"RcmdrPlugin.epack", "RcmdrPlugin.Export", "RcmdrPlugin.FactoMineR",
"RcmdrPlugin.HH", "RcmdrPlugin.IPSUR", "RcmdrPlugin.KMggplot2",
"RcmdrPlugin.MAc", "RcmdrPlugin.MAd", "RcmdrPlugin.mosaic", "RcmdrPlugin.orloca",
"RcmdrPlugin.pointG", "RcmdrPlugin.PT", "RcmdrPlugin.qcc", "RcmdrPlugin.qual",
"RcmdrPlugin.SensoMineR", "RcmdrPlugin.SLC", "RcmdrPlugin.sos",
"RcmdrPlugin.steepness", "RcmdrPlugin.survival", "RcmdrPlugin.SurvivalT",
"RcmdrPlugin.TeachingDemos", "RcmdrPlugin.TextMining", "RcmdrPlugin.UCA",
"abind", "acepack", "actuar", "ada", "ade4", "ade4TkGUI", "AER",
"akima", "AlgDesign", "alr3", "amap", "anchors", "animation",
"ape", "aplpack", "arules", "arulesViz", "ascii", "barcode",
"BayesX", "BCA", "bdsmatrix", "BHH2", "biclust", "biglm", "bitops",
"brew", "BsMD", "cacheSweave", "cairoDevice", "car", "CarbonEL",
"caTools", "cba", "chron", "CircStats", "clue", "clv", "coda",
"coin", "colorspace", "CompQuadForm", "conf.design", "contrast",
"corpcor", "coxme", "cubature", "DAAG", "dataframes2xls", "date",
"DBI", "degreenet", "deldir", "depthTools", "descr", "deSolve",
"DiceDesign", "dichromat", "digest", "diptest", "distr", "distrEx",
"doBy", "DoE.base", "DoE.wrapper", "dynlm", "e1071", "Ecdat",
"effects", "ellipse", "ENmisc", "EnQuireR", "ergm", "eRm", "evaluate",
"evd", "FactoMineR", "fAsianOptions", "fAssets", "fastICA", "fBasics",
"fCopulae", "fdrtool", "fEcofin", "fExoticOptions", "fExtremes",
"fftw", "fGarch", "fields", "filehash", "fImport", "flexclust",
"flexmix", "FME", "fMultivar", "fNonlinear", "fOptions", "foreach",
"forecast", "Formula", "fortunes", "fpc", "fPortfolio", "fracdiff",
"fRegression", "FrF2", "FrF2.catlg128", "fTrading", "fts", "fUnitRoots",
"gam", "gamlss", "gamlss.data", "gamlss.dist", "gbm", "gclus",
"gdata", "gee", "geepack", "geoR", "geoRglm", "ggm", "ggplot2",
"gmodels", "gmp", "gpairs", "GPArotation", "gpclib", "gplots",
"gRbase", "gregmisc", "gridBase", "gtools", "gWidgets", "gWidgetsRGtk2",
"gWidgetstcltk", "hergm", "hexbin", "HH", "Hmisc", "HSAUR", "igraph",
"ineq", "inline", "int64", "iplots", "ipred", "isa2", "ISwR",
"iterators", "itertools", "its", "JavaGD", "JGR", "kernlab",
"kinship", "kinship2", "latentnet", "latticeExtra", "latticist",
"lavaan", "leaps", "lhs", "linprog", "lme4", "lmtest", "locfit",
"logspline", "lokern", "longmemo", "lpSolve", "lpSolveAPI", "MAc",
"MAd", "mapproj", "maps", "maptools", "mathgraph", "matlab",
"matrixcalc", "MatrixModels", "maxLik", "mboost", "mclust", "MCMCpack",
"memoise", "MEMSS", "metafor", "mice", "minpack.lm", "misc3d",
"miscTools", "missMDA", "mitools", "mix", "mlbench", "mlmRev",
"mlogit", "mnormt", "modeltools", "mondate", "MPV", "multcomp",
"munsell", "mutatr", "mvtnorm", "network", "networkDynamic",
"networksis", "nor1mix", "np", "numDeriv", "nws", "odesolve",
"orloca", "orloca.es", "oz", "party", "pastecs", "PBSmapping",
"pcalg", "pixmap", "playwith", "plm", "plotrix", "plyr", "pmml",
"png", "poistweedie", "polspline", "polycor", "prabclus", "pracma",
"prodlim", "proto", "proxy", "pscl", "psych", "qcc", "qgraph",
"quadprog", "quantreg", "R2HTML", "R2PPT", "R2wd", "RandomFields",
"randomForest", "randomSurvivalForest", "randtoolbox", "RANN",
"RArcInfo", "RaschSampler", "rattle", "rbenchmark", "RBGL", "Rcmdr",
"RcmdrPlugin.BCA", "RcmdrPlugin.coin", "RcmdrPlugin.depthTools",
"RcmdrPlugin.doBy", "RcmdrPlugin.DoE", "RcmdrPlugin.doex", "RcmdrPlugin.EHESsampling",
"RcmdrPlugin.epack", "RcmdrPlugin.Export", "RcmdrPlugin.FactoMineR",
"RcmdrPlugin.HH", "RcmdrPlugin.IPSUR", "RcmdrPlugin.KMggplot2",
"RcmdrPlugin.MAc", "RcmdrPlugin.MAd", "RcmdrPlugin.mosaic", "RcmdrPlugin.orloca",
"RcmdrPlugin.pointG", "RcmdrPlugin.PT", "RcmdrPlugin.qcc", "RcmdrPlugin.qual",
"RcmdrPlugin.SensoMineR", "RcmdrPlugin.SLC", "RcmdrPlugin.sos",
"RcmdrPlugin.steepness", "RcmdrPlugin.survival", "RcmdrPlugin.SurvivalT",
"RcmdrPlugin.TeachingDemos", "RcmdrPlugin.TextMining", "RcmdrPlugin.UCA",
"RColorBrewer", "rcom", "Rcpp", "RcppArmadillo", "Rcsdp", "ReadImages",
"ref", "relations", "relax", "relevent", "relimp", "reshape",
"reshape2", "RExcelInstaller", "rgdal", "rgenoud", "rgeos", "rgl",
"Rglpk", "RgoogleMaps", "RGtk2", "RGtk2Extras", "rJava", "rjson",
"rlecuyer", "rmeta", "Rmpfr", "rms", "rngWELL", "robustbase",
"ROCR", "RODBC", "rootSolve", "Rpad", "rpanel", "rpart.plot",
"rscproxy", "Rserve", "RSiteSearch", "rsm", "rsprng", "RSQLite",
"Rsymphony", "RthroughExcelWorkbooksInstaller", "RUnit", "RWeka",
"RWekajars", "Ryacas", "sampleSelection", "sampling", "sandwich",
"scales", "scatterplot3d", "sem", "SensoMineR", "seriation",
"sets", "sfsmisc", "sgeostat", "shapefiles", "shapes", "siatclust",
"signal", "simecol", "slam", "SLC", "sm", "sn", "sna", "snow",
"Snowball", "snowFT", "sos", "sound", "sp", "spam", "SparseM",
"spatstat", "spc", "spdep", "splancs", "stabledist", "startupmsg",
"stashR", "statmod", "statnet", "steepness", "stringr", "strucchange",
"subselect", "sudoku", "survey", "SweaveListingUtils", "systemfit",
"tcltk2", "TeachingDemos", "testthat", "tikzDevice", "timeDate",
"timeSeries", "tis", "tkrplot", "tm", "tree", "trimcluster",
"tripack", "truncreg", "trust", "TSA", "tseries", "TSP", "tuneR",
"tweedie", "urca", "vcd", "verification", "VGAM", "VIM", "vioplot",
"waveslim", "WriteXLS", "XLConnect", "XLConnectJars", "XML",
"xtable", "xts", "YaleToolkit", "Zelig", "zoo")
download.packages(myPackages,"D:/coursera/)
)
;
as
as))))
hi
O
install.packages("forecast")
q()
library(kernlab)
data("spam")
str(spam[,1:5])
set.seed(3435)
trainIndicator = rbinom(4601,size=1, prob = 0.5)
table(trainIndicator)
trainSpam = spam(trainIndicator == 1)
library(kernlab)
data("spam")
str(spam[,1:5])
set.seed(3435)
trainIndicator = rbinom(4601,size=1, prob = 0.5)
table(trainIndicator)
trainSpam = spam(trainIndicator == 1)
a = data("spam")
trainSpam = a(trainIndicator == 1)
library(kernlab)
data("spam")
trainSpam = trainIndicator == 1
testSpam = trainIndicator == 0
nrows(trainSpam)
nrow(trainSpam)
trainSpam
names(trainSpam)
head(trainSpam)
spam$trainIndicator = rbinom(4601,size=1, prob = 0.5)
trainSpam = spam$trainIndicator == 1
testSpam = spam$trainIndicator == 0
names(trainSpam)
library(kernlab)
data("spam")
str(spam[,1:5])
head(spam,5)
trainIndicator = rbinom(spam,size=1, prob = 0.5)
table(trainIndicator)
trainSpam = spam$trainIndicator == 1
names(trainSpam)
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("Hmisc")
setwd("D:/coursera/RepData_PeerAssessment1")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
